---
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';
import BaseLayout from './BaseLayout.astro';
import { type Character as CharacterType } from '../types/character';
import TextField from '../components/TextField.astro';
import Accordion from '../components/Accordion.astro';
// import Character from '../components/character/Character';
// import updatePost from ''


export interface Props {
  character?: CharacterType
}

const { character } = Astro.props as Props;

// if (Astro.request.method === "POST") {
//   try {
//     const data = await Astro.request.formData();
//     const newstatus = data.get("status");
//     const character = {
//       id,
//       name,
//       status: newstatus,
//       species,
//       type,
//       gender,
//       origin,
//       location,
//       image,
//       episode,
//       url,
//       created
//     }
//     // function updateCharacter(character: Character): Promise<void> {
//     fetch(`http://localhost:3000/results/${character.id}`, {
//       method: 'PUT',
//       headers: {
//         'Content-Type': 'application/json',
//         Cache: 'no-cache',
//       },
//       body: JSON.stringify(character),
//     }).then(res => res.json()).then(r => console.log(r))
//     // Do something with the data
//   } catch (error) {
//     if (error instanceof Error) {
//       console.error(error.message);
//     }
//   }
// }


---

<BaseLayout title={character?.name} description={character?.status}>
  <main>
    {character === null
      ? (<article>Not found</article>)
      : (
        <article>
          <div class="hero-image">
            {character?.image && <Image width={480} height={240} src={character?.image || ""} alt="" />}
          </div>
          <div class="prose">
            <div class="title">
              <div class="date">
                Created on <FormattedDate date={new Date(character?.created || "")} />
              </div>
              <h1>{character?.name}</h1>
              <hr />
            </div>
            <div class="character-info">
              <TextField label='Status:' defaultValue={character?.status} />
              <TextField label='Species:' defaultValue={character?.species} />
              {character?.type && <TextField label='Type:' defaultValue={character?.type} />}
              <TextField label='Gender:' defaultValue={character?.gender} />
              <p>Origin: <a href={character?.origin?.url}>{character?.origin.name}</a></p>
              <p>Last Known Location: <a href={character?.location?.url}>{character?.location.name}</a></p>
              <p>URL: <a href={character?.url}>{character?.url}</a></p>
              <Accordion label="Episodes:">
                <p>{character?.episode.join(', ')}</p>
              </Accordion>
            </div>

            <slot />
          </div>
        </article>
      )
    }
  </main>
</BaseLayout>

<style>
  .hero-image {
    width: 100%;
  }
  .hero-image img {
    display: block;
    margin: 0 auto;
    border-radius: 12px;
    box-shadow: var(--box-shadow);
  }
  .prose {
    width: 720px;
    max-width: calc(100% - 2em);
    margin: auto;
    padding: 1em;
    color: rgb(var(--gray-dark));
  }
  .title {
    margin-bottom: 1em;
    padding: 1em 0;
    text-align: center;
    line-height: 1;
  }
  .title h1 {
    margin: 0 0 0.25em 0;
  }
  .date {
    margin-bottom: 0.5em;
    color: rgb(var(--gray));
  }
  .last-updated-on {
    font-style: italic;
  }
  .character-info {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    background-color: #f8f8f8;
    padding: 2rem;
    border: 1px solid #ddd;
    border-radius: 1rem;
  }
  .character-info p {
    margin: 5px 0;
    font-size: 18px;
  }
  .character-info a {
    cursor: pointer;
    text-decoration: none;
    color: #007bff;
  }

  .character-info a:hover {
    text-decoration: underline;
  }
</style>
